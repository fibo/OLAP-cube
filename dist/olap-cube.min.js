// http://g14n.info/OLAP-cube
require=function t(e,n,i){function s(o,l){if(!n[o]){if(!e[o]){var c="function"==typeof require&&require;if(!l&&c)return c(o,!0);if(r)return r(o,!0);var a=new Error("Cannot find module '"+o+"'");throw a.code="MODULE_NOT_FOUND",a}var h=n[o]={exports:{}};e[o][0].call(h.exports,function(t){var n=e[o][1][t];return s(n||t)},h,h.exports,t,e,n,i)}return n[o].exports}for(var r="function"==typeof require&&require,o=0;o<i.length;o++)s(i[o]);return s}({1:[function(t,e,n){const i=t("not-defined"),s=t("static-props");class r{constructor(){const t=Object.assign({dimensions:[],points:[],fields:[],data:[]},arguments[0]),e=t.dimensions,n=t.points,i=t.fields,r=t.data;if(r.length>0){if(r.filter(t=>t.length!==i.length).length>0)throw new TypeError("invalid slices");if(n.filter(t=>t.length!==e.length).length>0)throw new TypeError("invalid points");if(r.length!==n.length)throw new TypeError("orphan slices")}s(this)({dimensions:e,fields:i},!0),s(this)({points:n,data:r,structure:{dimensions:e,fields:i}}),s(this)({header:()=>this.dimensions.concat(this.fields),rows:()=>this.points.map((t,e)=>t.concat(this.data[e]))})}addRows(t){const e=t.header,n=t.rows,i=this.dimensions,s=this.fields;if(e.length!==i.length+s.length)throw new TypeError("invalid header");const o=[...this.data],l=[...this.points];return n.forEach(t=>{let n=[],r=[];for(let o in t){const l=e[o];let c=i.indexOf(l),a=s.indexOf(l);if(c>-1)n.splice(c,0,t[o]);else{if(!(a>-1))throw new TypeError("invalid row");r.splice(a,0,t[o])}}let c=null;l.forEach((t,e)=>{t.filter((t,e)=>t===n[e]).length===n.length&&(c=e)}),null===c&&(c=l.length,l.push(n)),o.splice(c,0,r)}),new r(Object.assign({},this.structure,{points:l,data:o}))}slice(t,e){const n=this.structure;let i=[],s=[];const o=n.dimensions.indexOf(t);if(-1===o)throw new TypeError("dimension not found",t);return this.points.forEach((t,n)=>{t[o]===e&&(s.push(this.data[n]),i.push(this.points[n]))}),new r(Object.assign({},n,{points:i,data:s}))}dice(t){let e=[],n=[];return this.points.forEach((i,s)=>{t(i)&&(n.push(this.data[s]),e.push(this.points[s]))}),new r(Object.assign({},this.structure,{points:e,data:n}))}rollup(t,e,n,s){let o=[],l={},c=[],a={};const h=this.structure.dimensions.indexOf(t),u=this.structure.dimensions.length,f={dimensions:[t],fields:e};return this.rows.forEach(t=>{const e=t[h];a[e]||(o.push([e]),a[e]=!0);const n=t.slice(u);i(l[e])&&(l[e]=[]),l[e].push(n)}),o.forEach(t=>{c.push(l[t].reduce(n,s))}),new r(Object.assign({},f,{points:o,data:c}))}}e.exports=r},{"not-defined":2,"static-props":3}],2:[function(t,e,n){e.exports=function(t){return null==t||t.length<1&&"function"!=typeof t||"object"==typeof t&&Object.keys(t).length<1}},{}],3:[function(t,e,n){e.exports=n.default=function(t){return function(e,n){var i={};for(var s in e){var r={configurable:!1,enumerable:n},o=e[s];"function"==typeof o?r.get=o:(r.value=o,r.writable=!1),i[s]=r}Object.defineProperties(t,i)}}},{}],4:[function(t,e,n){e.exports=function(t){t()}},{}],"olap-cube":[function(t,e,n){t("strict-mode")(function(){e.exports={model:{Table:t("./model/Table")}}})},{"./model/Table":1,"strict-mode":4}]},{},[]);